---
# omit title and subtitle if you're doing a custom title block
title: Transport in Asia-Pacific
subtitle: Transport makes up nearly 10% of all greenhouse gas emissions across the Asia-Pacific. But that percentage is very different for countries across the region.
# for social previews
pagetitle: Transport emissions in Asia-Pacific
description: A description for social previews
twitter-card:
  site: "@360info_global"
  image: "/folder/example.png"
open-graph:
  image: "/folder/example.png"
resources:
  - /data/transport-emissions-ap.csv
format:
  360-embed-html: default
# metadata for modals and embed sharing functionality
360embed:
  byline: James Goldie, 360info
  data-source: Climate Trace
  type: map
  aspect-ratio: 4 / 3
  min-height: 680px
  max-height: 680px
  bg-colour: white
  title: "Interactive: Transport emissions in Asia-Pacific"
  repo: report-transport-under1.5c
  domain: https://transport.360visuals.org
  path: /transport-emissions-ap
  # fragments: state, month
  about: |
    The data for this graphic comes from [Climate Trace](https://climatetrace.org), which independently tracks greenhouse gas emissions globally.<br><br>
    
    The graphic depicts how a country's transport-related emissions compare to its overall greenhouse gas emissions, and how transport-related emissions break down into domestic and international aviation and shipping, as well as road and rail transport. You can see these in gross terms or in "per capita" terms (emissions per person), which allows for comparisons between larger and smaller countries.<br><br>

    The emissions are measured in units of tonnes of CO2 equivalent. The "equivalent" part is designed to account for other greenhouse gases by comparing the effect they would have on the climate over 100 years to that of carbon dioxide.<br><br>

    <strong>Note:</strong> In the pie chart, "mt" means millitonnes, or kilograms, _not_ megatonnes (1 million tonnes).
---

```{ojs}
//| label: setup
import { aq, op } from "@uwdata/arquero"
import { PieChart } from "@jimjamslam/pie-chart-component"
```

```{ojs}
//| label: get-data
allData = FileAttachment("/data/transport-emissions-ap.csv").csv({ typed: true })
```

```{ojs}
//| label: controls
viewof selectedCities = Inputs.search(allData, {
  required: false,
  columns: ["name"],
  datalist: allData.map(x => x.name)
})

viewof selectedView = Inputs.radio(
  new Map([
    ["Total emissions", "gross_"],
    ["Emissions per person", "percapita_"]
  ]), {
    value: "gross_"
  })
```

```{ojs}
//| label: format-data
selectedData = selectedCities.length == 1 ?
  allData.filter(d => selectedCities.map(x => x.name).includes(d.name)) :
  allData.filter(d => d.name == "Asia-Pacific region")
emissionsAll       = selectedData[0][selectedView + "All emissions"]
emissionsTransport = selectedData[0][selectedView + "All transport emissions"]

// put headline figures into an array for the pie chart
pieChartData = [
  {
    name: "Transport: " + d3.format(".1%")(emissionsTransport / emissionsAll),
    value: emissionsTransport
  },
  {
    name: "Other sectors",
    value: emissionsAll - emissionsTransport,
  }
]
```

```{ojs}
//| label: subtitle
selectedCities.length == 1 ? md`## ${selectedCities[0].name}` :
  selectedCities.length == 0 ? md`## Asia-Pacific region` :
    md``
```

::::{#visuals}
 
```{ojs}
//| label: pie-chart
chartSuffix = selectedView == "gross_" ? "t" : "t p.p."
selectedData.length == 1 ? PieChart(pieChartData, {
  name: d => d.name,
  value: d => d.value,
  width: 200,
  height: 160, 
  innerRadius: 20,
  outerRadius: 40, // defaults 0.5 * min(width, height)
  // TODO - make this work with `tonnesOrKilos`
  format: ".2s",
  suffix: chartSuffix,
  colors: ["orangered", "lightgrey"]
}) : null
```

```{ojs}
//| label: reshape-figures
//| output: false
selectedFigures = aq
  .from(selectedData)
  .select(aq.not("iso2", "iso3", "name"))
  .fold(aq.all())
  .params({ selectedView: selectedView })
  .filter(d => op.startswith(d.key, selectedView))
  .filter(d => !op.match(d.key, /_All/))
  .derive({
    frac: d => d.value / op.sum(d.value),
    key: d => op.split(d.key, "_")[1]
    })
  .objects()

tonnesOrKilos = d =>
  d > 1 ?
    d3.format(".2s")(d) + "t" :
    d3.format(".2s")(d * 1000000) + "g"
```

```{ojs}
//| label: bar-chart
//| output: false
barChartVertical = Plot.plot({
  marks: [
    Plot.barY(selectedFigures, {
      y: "value",
      fill: "key",
    }),
    Plot.text(selectedFigures, Plot.dodgeX("right", Plot.stackY({
      y: "value",
      text: "key",
      fill: "key",
      stroke: "white",
      strokeWidth: 4,
      textAnchor: "start",
      fontWeight: "bold"
    }))),
    Plot.tip(selectedFigures, Plot.pointerY(Plot.stackY({
      y: "value",
      fill: "key",
      channels: {
        "Subsector": "key",
        "Percent": "frac"
      },
      format: {
        "Percent": d => d3.format(".1%")(d),
        "y": tonnesOrKilos,
        "fill": null
      }
    })))
  ],
  y: {
    label: selectedView == "gross_" ? "Emissions" : "Emissions per person",
    // TODO - switch to kg for smaller figures
    tickFormat: tonnesOrKilos,
  },
  marginLeft: 50,
  marginRight: 180,
  style: {
    fontFamily: "Roboto Condensed",
    fontSize: 16
  },
  width: 300,
  height: 400
})
```

```{ojs}
selectedData.length == 1 ? html`${barChartVertical}` : null
```

::::

{{< include _popups/_buttons.qmd >}}

{{< include _popups/_dialogs.qmd >}}
