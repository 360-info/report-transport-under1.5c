---
# omit title and subtitle if you're doing a custom title block
title: Access to public transport
subtitle: "**How many people in your city have a stop nearby?**<br><span style='font-size: 85%; color: #555555;'>This measures the percentage of people in a city with a **minor stop (bus) within 500 m** or a **major stop (train, metro or ferry) within 1 km** of their home.</span>"
# for social previews
pagetitle: "Interactive: Access to public transport"
description: Which 
twitter-card:
  site: "@360info_global"
  image: "/folder/example.png"
open-graph:
  image: "/folder/example.png"
resources:
  - /data/pt-access.csv
format:
  360-embed-html: default
# metadata for modals and embed sharing functionality
360embed:
  byline: James Goldie, 360info
  data-source: XXX
  type: map
  aspect-ratio: 20 / 19
  min-height: 500px
  max-height: 893px
  bg-colour: white
  title: "Interactive: access to public transport"
  repo: report-example
  domain: https://transport.360visuals.org
  path: /map/  
  fragments: 
  about: |
    Here's a place to **tell people** and [link to things](https://example.com)!
---

```{ojs}
//| label: download-data
cities = FileAttachment("/data/pt-access.csv").csv({ typed: true })
```

```{ojs}
//| label: debug-table
html`
<details>
  <summary>Table view</summary>
  ${Inputs.table(cities)}
</details>`
```

```{ojs}
//| label: city-search
viewof selectedCities = Inputs.search(cities, {
  required: false,
  columns: ["city", "country_name"],
})

// zoom checkbox allows reader to narrow in on selected cities or countries
// (only works with a valid selection)
viewof zoomOptions = Inputs.checkbox(["Zoom to selection"], {
  disabled: selectedCities.length == 0
})
zoomToSelection = selectedCities.length > 0 &&
  zoomOptions.includes("Zoom to selection")

```

```{ojs}
//| label: filter-to-zoom
activeData = zoomToSelection ?
  cities.filter(
    d => selectedCities
      .map(d => d.city.toLowerCase())
      .includes(d.city.toLowerCase())) :
  cities
```

```{ojs}
//| label: beeswarm
Plot.plot({
  marks: [
    Plot.dot(activeData, Plot.dodgeY("middle", {
      fy: "region",
      x: "pct_pt_access",
      fill: "pct_pt_access",
      r: "population",
      opacity: d =>
        selectedCities.length > 0 &&
          (!selectedCities
            .map(d => d.city.toLowerCase())
            .includes(d.city.toLowerCase())) ?
        0.1 :
        1,
    })),
    Plot.tip(activeData, Plot.pointer(Plot.dodgeY("middle", {
      fy: "region",
      x: "pct_pt_access",
      r: "population",
      channels: {
        "City": "city",
        "Country": "country_name"
      },
      format: {
        "x": d => d.toFixed(1) + "%",
        "fy": null
      }
    })))
  ],
  x: {
    label: "Access to public transport",
    grid: true,
    tickFormat: d => d.toFixed(0) + "%",
    axis: "top",
    domain: [0, 100]
  },
  fy: {
    label: null,
  },
  color: {
    reverse: true
  },
  r: {
    label: "Population",
    range: zoomToSelection ? [0.25, 25] : [0.15, 14]
  },
  height: zoomToSelection ? 600 : 700,
  width: Math.max(width, 800),
  marginLeft: 100,
  marginTop: 80,
  style: {
    fontFamily: "Roboto Condensed",
    fontSize: 24
  }
})
```

{{< include _popups/_buttons.qmd >}}

{{< include _popups/_dialogs.qmd >}}
